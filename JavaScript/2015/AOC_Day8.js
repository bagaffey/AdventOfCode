var puzzData = document.getElementsByTagName('pre')[0].textContent;

/*
 * Disregarding the whitespace in the file, what is the number of characters of code
 * for string literals minus the number of characters in memory for the values of the
 * strings in total for the entire file?
 */

var codeLength = puzzData.match(/./gm).length;
var strs = puzzData.match(/.+/gm);
var orig = puzzData.match(/.+/gm);
var memoryLength = 0;
var encodedLen = puzzData.replace(/\\/g, '\\\\').replace(/"/g, '\\\"').replace(/^(\\")/gm,'\"$1').replace(/(\\")$/gm,'$1\"').match(/./gm).length;
function killEscapes(str) {
  return (str.replace(/\\x[0-9a-f]+/g, 'Z').replace(/\\"/g,"Z").replace(/\\{2}/g,'Z'));
}

for (var i = 0; i < strs.length; ++i) {
  strs[i] = killEscapes(strs[i]);
  strs[i] = strs[i].substring(1, strs[i].length - 1)
}
// strs.forEach(function(x) {memoryLength += x.length} );

console.log('code length: ' + codeLength);
// console.log('result : ' + (codeLength - memoryLength).toString());
// console.log('memo length: ' + memoryLength);

var strArray = new Array()
strArray.push("sjdivfriyaaqa\xd2v\"k\"mpcu\"yyu\"en");
strArray.push("vcqc");
strArray.push("zbcwgmbpijcxu\"yins\"sfxn");
strArray.push("yumngprx");
strArray.push("bbdj");
strArray.push("czbggabkzo\"wsnw\"voklp\"s");
strArray.push("acwt");
strArray.push("aqttwnsohbzian\"evtllfxwkog\"cunzw");
strArray.push("ugvsgfv");
strArray.push("xlnillibxg");
strArray.push("kexh\"pmi");
strArray.push("syvugow");
strArray.push("m\"ktqnw");
strArray.push("yrbajyndte\\rm");
strArray.push("f\"kak\x70sn\xc4kjri");
strArray.push("yxthr");
strArray.push("alvumfsjni\"kohg");
strArray.push("trajs\x5brom\xf1yoijaumkem\"\"tahlzs");
strArray.push("\"oedr\"pwdbnnrc");
strArray.push("qsmzhnx\"");
strArray.push("\"msoytqimx\\tbklqz");
strArray.push("mjdfcgwdshrehgs");
strArray.push("\"rivyxahf\"");
strArray.push("ciagc\x04bp");
strArray.push("xkfc");
strArray.push("xrgcripdu\x4c\xc4gszjhrvumvz\"mngbirb");
strArray.push("gvmae\"yiiujoqvr\"mkxmgbbut\"u");
strArray.push("ih");
strArray.push("ncrqlejehs");
strArray.push("mkno\x43pcfdukmemycp");
strArray.push("uanzoqxkpsksbvdnkji\"feamp");
strArray.push("axoufpnbx\\ao\x61pfj\"b");
strArray.push("dz\\ztawzdjy");
strArray.push("ihne\"enumvswypgf");
strArray.push("\"dgazthrphbshdo\\vuqoiy\"");
strArray.push("dlnmptzt\\zahwpylc\\b\"gmslrqysk");
strArray.push("mhxznyzcp");
strArray.push("rebr\"amvxw\x5fmbnfpkkeghlntavj");
strArray.push("lades\x47ncgdof\"\"jmbbk");
strArray.push("dwxuis\xa5wdkx\\z\"admgnoddpgkt\\zs");
strArray.push("g\\k\x27qsl\x34hwfglcdxqbeclt\xca\\");
strArray.push("lhyjky\\m\"pvnm\\xmynpxnlhndmahjl");
strArray.push("c\"uxabbgorrpprw\"xas\\vefkxioqpt");
strArray.push("rfrvjxpevcmma\x71gtfipo");
strArray.push("fgh\"kcwoqwfnjgdlzfclprg\"q");
strArray.push("onxnwykrba");
strArray.push("hkkg\x60f\"tjzsanpvarzgkfipl");
strArray.push("\"aintes\"ofq\"juiaqlqxmvpe\\a");
strArray.push("wiyczzs\"ciwk");
strArray.push("mfqeu");
strArray.push("v\xe1z\x7ftzalmvdmncfivrax\\rjwq");
strArray.push("k\"vtg");
strArray.push("exhrtdugeml\xf0");
strArray.push("behnchkpld");
strArray.push("mhgxy\"mfcrg\xc5gnp\"\"osqhj");
strArray.push("rlvjy");
strArray.push("awe");
strArray.push("ctwy");
strArray.push("vt");
strArray.push("\x54t");
strArray.push("zugfmmfomz");
strArray.push("cv\"cvcvfaada\x04fsuqjinbfh\xa9cq\xd2c\"d");
strArray.push("oj");
strArray.push("xazanf\"wbmcrn");
strArray.push("\\\\zkisyjpbzandqikqjqvee");
strArray.push("dpsnbzdwnxk\\v");
strArray.push("sj\"tuupr\\oyoh");
strArray.push("myvkgnw\x81q\xaaokt\\emgejbsyvxcl\\\xee");
strArray.push("ejeuqvunjcirdkkpt\"nlns");
strArray.push("twmlvwxyvfyqqzu");
strArray.push("\"xwtzdp\x98qkcis\"dm\\\"ep\"xyykq");
strArray.push("vvcq\\expok");
strArray.push("wgukjfanjgpdjb");
strArray.push("\"mjcjajnxy\\dcpc");
strArray.push("wdvgnecw\\ab\x44klceduzgsvu");
strArray.push("dqtqkukr\"iacngufbqkdpxlwjjt");
strArray.push("\"xj\"\x66qofsqzkoah");
strArray.push("nptiwwsqdep");
strArray.push("gsnlxql\x30mjl");
strArray.push("yeezwokjwrhelny\"");
strArray.push("bjauamn\\izpmzqqasid");
strArray.push("tvjdbkn\"tiziw\x82r");
strArray.push("w");
strArray.push("xwoakbbnjnypnaa\xa9wft\"slrmoqkl");
strArray.push("vwxtnlvaaasyruykgygrvpiopzygf\"vq");
strArray.push("qdancvnvmhlmpj\\isdxs");
strArray.push("xzc\\elw");
strArray.push("b\"wxeqvy\"qf\"g\xcaoklsucwicyw\"dovr");
strArray.push("yomlvvjdbngz\"rly\"afr");
strArray.push("bfb\"x\"aweuwbwmoa\x13\"t\"zhr");
strArray.push("\"dmfoxb\"qvpjzzhykt\xd2\"\"ryhxi");
strArray.push("psqef\"yu\\qiflie\"\x79w");
strArray.push("arzewkej\"lqmh\\sayyusxxo\\");
strArray.push("vuvvp");
strArray.push("hc\"lg\x6bcpupsewzklai\"l");
strArray.push("cjdfygc\"auorqybnuqghsh\x10");
strArray.push("j");
strArray.push("wqjexk\"eyq\\lbroqhk\\dqzsqk");
strArray.push("dws\"ru\"dvxfiwapif\"oqwzmle");
strArray.push("agcykg\\jt\\vzklqjvknoe");
strArray.push("kksd\"jmslja\\z\"y\\b\xaagpyojct");
strArray.push("nnpipxufvbfpoz\"jno");
strArray.push("dtw");
strArray.push("xlolvtahvgqkx\\dgnhj\\spsclpcxv\\");
strArray.push("mxea\\mbjpi");
strArray.push("lgbotkk\"zmxh\\\\qji\"jszulnjsxkqf");
strArray.push("lwckmhwhx\"gmftlb\x91am");
strArray.push("xxdxqyxth");
strArray.push("\"lmqhwkjxmvayxy");
strArray.push("tf");
strArray.push("qy");
strArray.push("wdqmwxdztax\"m\"\x09\x11xdxmfwxmtqgwvf");
strArray.push("\xcbnazlf\"ghziknszmsrahaf");
strArray.push("e\x6aupmzhxlvwympgjjpdvo\"kylfa");
strArray.push("\x81vhtlillb\xactgoatva");
strArray.push("dvnlgr");
strArray.push("f");
strArray.push("xg\xfacwizsadgeclm");
strArray.push("vnnrzbtw\"\\prod\\djbyppngwayy\"");
strArray.push("lrt\xf4jahwvfz");
strArray.push("aqpnjtom\"ymkak\\dadfybqrso\\fwv");
strArray.push("gz\"aac\"mrbk\"ktommrojraqh");
strArray.push("wycamwoecsftepfnlcdkm");
strArray.push("nrhddblbuzlqsl\x9cben");
strArray.push("vckxhyqkmqmdseazcykrbysm");
strArray.push("sil\xbbtevmt\"gvrvybui\"faw\"j");
strArray.push("cjex\\tp\x45pzf");
strArray.push("asjobvtxszfodgf\"ibftg");
strArray.push("gkyjyjdrxdcllnh\"sjcibenrdnxv");
strArray.push("oswsdpjyxpbwnqbcpl\"yrdvs\\zq");
strArray.push("\"\"tyowzc\\fycbp\"jbwrbvgui");
strArray.push("cbpcabqkdgzmpgcwjtrchxp");
strArray.push("iyrzfh\x45gw\"fdlfpiaap\x31xqq");
strArray.push("evgksznidz");
strArray.push("b\\w\\");
strArray.push("loufizbiy\x57aim\"bgk");
strArray.push("qjfyk");
strArray.push("g\"anmloghvgr\x07zwqougqhdz");
strArray.push("usbbmwcxd\\bdgg");
strArray.push("htitqcpczml");
strArray.push("eke\\cqvpexqqk\"to\"tqmljrpn\xe6lji\"");
strArray.push("g\xd2ifdsej");
strArray.push("h\"sk\"haajajpagtcqnzrfqn\xe6btzo");
strArray.push("wfkuffdxlvm\\cvlyzlbyunclhmpp");
strArray.push("myaavh\"spue");
strArray.push("hqvez\x68d\"eo\"eaioh");
strArray.push("s\"qd\"oyxxcglcdnuhk");
strArray.push("ilqvar");
strArray.push("srh");
strArray.push("puuifxrfmpc\"bvalwi\x2blu\\");
strArray.push("yywlbutufzysbncw\\nqsfbhpz\"mngjq");
strArray.push("zbl\\jfcuop");
strArray.push("hjdouiragzvxsqkreup\\");
strArray.push("qi");
strArray.push("ckx\\funlj\xa7ahi");
strArray.push("k");
strArray.push("ufrcnh\"ajteit");
strArray.push("cqv\"bgjozjj\x60x\xa8yhvmdvutchjotyuz");
strArray.push("hkuiet\"oku\x8cfhumfpasl");
strArray.push("\"\\sbe\x4d");
strArray.push("vhknazqt");
strArray.push("eyyizvzcahgflvmoowvs\\jhvygci");
strArray.push("kki\x3ewcefkgtjap\"xtpxh\"lzepoqj");
strArray.push("wvtk");
strArray.push("\"ynet");
strArray.push("zh\\obk\"otagx\x59txfzf");
strArray.push("ocowhxlx\xe6zqg\x63wx\\tclkhq\\vmaze");
strArray.push("w\"cf");
strArray.push("qpniprnrzrnvykghqnalr");
strArray.push("jctcqra\"\x05dhlydpqamorqjsijt\\xjdgt");
strArray.push("sig");
strArray.push("qhlbidbflwxe\"xljbwls\x20vht");
strArray.push("irmrebfla\xefsg\"j");
strArray.push("nep");
strArray.push("hjuvsqlizeqobepf");
strArray.push("guzbcdp\"obyh");
strArray.push("\"mjagins\xf9tqykaxy\"");
strArray.push("knvsdnmtr\"zervsb");
strArray.push("hzuy");
strArray.push("zza\"k\"buapb\\elm\xfeya");
strArray.push("lrqar\"dfqwkaaqifig\"uixjsz");
strArray.push("\"azuo\x40rmnlhhluwsbbdb\x32pk\\yu\"pbcf");
strArray.push("dplkdyty");
strArray.push("rfoyciebwlwphcycmguc");
strArray.push("ivnmmiemhgytmlprq\\eh");
strArray.push("lhkyzaaothfdhmbpsqd\\yyw");
strArray.push("tnlzifupcjcaj");
strArray.push("\\qiyirsdrfpmu\\\x15xusifaag");
strArray.push("\\lcomf\\s");
strArray.push("uramjivcirjhqcqcg");
strArray.push("kkbaklbxfxikffnuhtu\xc6t\"d");
strArray.push("n\xefai");
strArray.push("\"toy\"bnbpevuzoc\"muywq\"gz\"grbm");
strArray.push("\"muu\\wt");
strArray.push("\\srby\"ee");
strArray.push("erf\"gvw\"swfppf");
strArray.push("pbqcgtn\"iuianhcdazfvmidn\\nslhxdf");
strArray.push("uxbp");
strArray.push("up\\mgrcyaegiwmjufn");
strArray.push("nulscgcewj\\dvoyvhetdegzhs\"");
strArray.push("masv\"k\\rzrb");
strArray.push("qtx\x79d\"xdxmbxrvhj");
strArray.push("fid\\otpkgjlh\"qgsvexrckqtn\xf4");
strArray.push("tagzu");
strArray.push("bvl\\\"noseec");
strArray.push("\\xgicuuh");
strArray.push("w\"a\"npemf");
strArray.push("sxp");
strArray.push("nsmpktic\x8awxftscdcvijjobnq\"gjd");
strArray.push("uks\"\"jxvyvfezz\"aynxoev\"cuoav");
strArray.push("m");
strArray.push("lkvokj");
strArray.push("vkfam\"yllr\"q\x92o\x4ebecnvhshhqe\\");
strArray.push("efdxcjkjverw");
strArray.push("lmqzadwhfdgmep\x02tzfcbgrbfekhat");
strArray.push("cpbk\x9azqegbpluczssouop\x36ztpuoxsw");
strArray.push("cqwoczxdd\"erdjka");
strArray.push("cwvqnjgbw\\fxdlby");
strArray.push("mvtm");
strArray.push("lt\"bbqzpumplkg");
strArray.push("ntd\xeeuwweucnuuslqfzfq");
strArray.push("y\xabl\"dbebxjrlbmuoo\\\x1au");
strArray.push("qjoqx\\a");
strArray.push("pu\"ekdnfpmly\xbago\"");
strArray.push("fjhhdy");
strArray.push("arl");
strArray.push("xcywisim\"bwuwf\"\"raepeawwjub");
strArray.push("pbe");
strArray.push("dbnqfpzyaumxtqnd\xc5dcqrkwyop");
strArray.push("ojv\x40vtkwgkqepm\x8bzft\\vedrry");
strArray.push("wggqkfbwqumsgajqwphjec\"mstxpwz");
strArray.push("zjkbem");
strArray.push("icpfqxbelxazlls");
strArray.push("pvpqs\\abcmtyielugfgcv\"tjxapxqxnx");
strArray.push("oqddwlvmtv\"\x39lyybylfb\"jmngnpjrdw");
strArray.push("gisgbve");
strArray.push("\"aglg");
strArray.push("y\"\"ss\xafvhxlrjv");
strArray.push("qbgqjsra");
strArray.push("ihshbjgqpdcljpmdwdprwloy");
strArray.push("djja\\wcdn\"svkrgpqn\"uz\"hc\x43hj");
strArray.push("cbjm");
strArray.push("pnn");
strArray.push("pqvh\"noh");
strArray.push("\"\\fdktlp");
strArray.push("ncea");
strArray.push("pqgzphiyy");
strArray.push("\xbedovhxuipaohlcvkwtxwmpz\"ckaif\"r");
strArray.push("arjuzbjowqciunfwgxtph\"vlhy\"n");
strArray.push("c");
strArray.push("nrpdxunulgudqzlhtae");
strArray.push("iefheu\"uru\"");
strArray.push("aqijysxuijud\"np\\opbichhudil\xbesum");
strArray.push("pfpevmtstl\"lde\"bzr\"vspdxs");
strArray.push("vparfbdjwvzsocpnzhp");
strArray.push("g\x4ffxaarafrsjthq\\\xc1rw");
strArray.push("ng\\rqx\\gwpzucbh\xafl");
strArray.push("rw\"nf\\dna");
strArray.push("jkkeahxurxla\\g\xb3czrlsyimmwcwthr");
strArray.push("twaailoypu\"oas\"kpuuyedlaw\\\xb0vzt");
strArray.push("hznex\\gdiqvtugi");
strArray.push("imdibsunjeswhk");
strArray.push("ta\\icileuzpxro\"cfmv\"mzp");
strArray.push("coykr\x57luiysucfaflmilhlehmvzeiepo");
strArray.push("u\x3dfh\xd4yt");
strArray.push("piw\x1bz\"eowy\"vfk\"wqiekw");
strArray.push("gan\"y");
strArray.push("p\"bevidoazcznr\"hddxuuq\"");
strArray.push("bwzucczznutbxe");
strArray.push("z\"viqgyqjisior\\iecosmjbknol");
strArray.push("dmlpcglcfkfsctxydjvayhymv\x3c\\gp");
strArray.push("bfvkqrintbbvgfv");
strArray.push("xlzntrgdck\"cprc\xadczyarbznqmuhxyuh");
strArray.push("uqdxnuwioc\"kdytxq\\ig");
strArray.push("xrafmucpmfi");
strArray.push("vr\"hltmfrge");
strArray.push("eonf\"nt\\wtcnsocs");
strArray.push("j\xb7xoslyjeyjksplkqixncgkylkw");
strArray.push("njw\"pefgfbez\x9axshdmplxzquqe");
strArray.push("di\x58bvptfsafirpc");
strArray.push("l\x1fkco");
strArray.push("x");
strArray.push("mprndo\"n");
strArray.push("psegit");
strArray.push("svbdnkkuuqs\"sqxu\"oqcyz\"aizashk");
strArray.push("cwkljukxer\\\"\\nff\"esjwiyaoy");
strArray.push("ilxrkgbjjxpvhdtq\"cpiuoofdnkpp");
strArray.push("hlngi\"ulxep\\qohtmqnqjb\"rkgerho");
strArray.push("gxws\"bcgm\"p");
strArray.push("bv\"mds\\zhfusiepgrz\\b\x32fscdzz");
strArray.push("l\xfampwtme\x69qvxnx\"\"\xc4jruuymjxrpsv");
strArray.push("qqmxhrn");
strArray.push("xziq\\\x18ybyv\x9am\"neacoqjzytertisysza");
strArray.push("aqcbvlvcrzceeyx\\j\"\"x");
strArray.push("yjuhhb");
strArray.push("\x5em\"squulpy");
strArray.push("dpbntplgmwb");
strArray.push("utsgfkm\\vbftjknlktpthoeo");
strArray.push("ccxjgiocmuhf\"ycnh");
strArray.push("lltj\"kbbxi");

memoryLength = 0;
strArray.forEach(function(x) { memoryLength += x.length; } );
console.log('memory length: ' + memoryLength.toString());
console.log('part 1 solution is ' + (codeLength - memoryLength).toString());
console.log('part 2 solution is ' + (encodedLen - codeLength).toString());